<?xml version="1.0" encoding="UTF-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|Win32">
      <Configuration>MinSizeRel</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|Win32">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{1AD584E5-2FEB-3574-B15A-3614975CC34D}</ProjectGuid>
    <WindowsTargetPlatformVersion>10.0.22621.0</WindowsTargetPlatformVersion>
    <Keyword>Win32Proj</Keyword>
    <Platform>Win32</Platform>
    <ProjectName>ZERO_CHECK</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Midl>
      <AdditionalIncludeDirectories>E:\Repositories\ZLMediaKit;E:\Repositories\ZLMediaKit\3rdpart;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Midl>
      <AdditionalIncludeDirectories>E:\Repositories\ZLMediaKit;E:\Repositories\ZLMediaKit\3rdpart;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">
    <Midl>
      <AdditionalIncludeDirectories>E:\Repositories\ZLMediaKit;E:\Repositories\ZLMediaKit\3rdpart;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">
    <Midl>
      <AdditionalIncludeDirectories>E:\Repositories\ZLMediaKit;E:\Repositories\ZLMediaKit\3rdpart;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="E:\Repositories\ZLMediaKit\CMakeFiles\e62ea270307b75b147db812891101e0c\generate.stamp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -HE:/Repositories/ZLMediaKit -BE:/Repositories/ZLMediaKit --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file E:/Repositories/ZLMediaKit/ZLMediaKit.sln
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">E:/Repositories/ZLMediaKit/CMakeFiles/e62ea270307b75b147db812891101e0c/generate.stamp.rule;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CMakeCInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CMakeCXXInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CMakeGenericSystem.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CMakeLanguageInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CMakePushCheckState.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CMakeRCInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CheckCSourceCompiles.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CheckCXXCompilerFlag.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CheckCXXSourceCompiles.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CheckCXXSymbolExists.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CheckStructHasMember.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CheckSymbolExists.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\FindGit.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\FindOpenSSL.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\GenerateExportHeader.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\Platform\Windows-MSVC.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\Platform\Windows.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\Platform\WindowsPaths.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\SelectLibraryConfigurations.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\exportheader.cmake.in;E:\Repositories\ZLMediaKit\3rdpart\CMakeLists.txt;E:\Repositories\ZLMediaKit\CMakeFiles\3.10.0-rc1\CMakeCCompiler.cmake;E:\Repositories\ZLMediaKit\CMakeFiles\3.10.0-rc1\CMakeCXXCompiler.cmake;E:\Repositories\ZLMediaKit\CMakeFiles\3.10.0-rc1\CMakeRCCompiler.cmake;E:\Repositories\ZLMediaKit\CMakeFiles\3.10.0-rc1\CMakeSystem.cmake;E:\Repositories\ZLMediaKit\CMakeLists.txt;E:\Repositories\ZLMediaKit\ZLMVersion.h.ini;E:\Repositories\ZLMediaKit\api\CMakeLists.txt;E:\Repositories\ZLMediaKit\api\tests\CMakeLists.txt;E:\Repositories\ZLMediaKit\cmake\FindFAAC.cmake;E:\Repositories\ZLMediaKit\cmake\FindJEMALLOC.cmake;E:\Repositories\ZLMediaKit\cmake\FindMYSQL.cmake;E:\Repositories\ZLMediaKit\cmake\FindPCAP.cmake;E:\Repositories\ZLMediaKit\cmake\FindX264.cmake;E:\Repositories\ZLMediaKit\ext-codec\CMakeLists.txt;E:\Repositories\ZLMediaKit\server\CMakeLists.txt;E:\Repositories\ZLMediaKit\src\CMakeLists.txt;E:\Repositories\ZLMediaKit\srt\CMakeLists.txt;E:\Repositories\ZLMediaKit\tests\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">E:\Repositories\ZLMediaKit\CMakeFiles\generate.stamp;E:\Repositories\ZLMediaKit\3rdpart\CMakeFiles\generate.stamp;E:\Repositories\ZLMediaKit\src\CMakeFiles\generate.stamp;E:\Repositories\ZLMediaKit\ext-codec\CMakeFiles\generate.stamp;E:\Repositories\ZLMediaKit\srt\CMakeFiles\generate.stamp;E:\Repositories\ZLMediaKit\api\CMakeFiles\generate.stamp;E:\Repositories\ZLMediaKit\api\tests\CMakeFiles\generate.stamp;E:\Repositories\ZLMediaKit\server\CMakeFiles\generate.stamp;E:\Repositories\ZLMediaKit\tests\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -HE:/Repositories/ZLMediaKit -BE:/Repositories/ZLMediaKit --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file E:/Repositories/ZLMediaKit/ZLMediaKit.sln
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">E:/Repositories/ZLMediaKit/CMakeFiles/e62ea270307b75b147db812891101e0c/generate.stamp.rule;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CMakeCInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CMakeCXXInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CMakeGenericSystem.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CMakeLanguageInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CMakePushCheckState.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CMakeRCInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CheckCSourceCompiles.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CheckCXXCompilerFlag.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CheckCXXSourceCompiles.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CheckCXXSymbolExists.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CheckStructHasMember.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CheckSymbolExists.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\FindGit.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\FindOpenSSL.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\GenerateExportHeader.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\Platform\Windows-MSVC.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\Platform\Windows.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\Platform\WindowsPaths.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\SelectLibraryConfigurations.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\exportheader.cmake.in;E:\Repositories\ZLMediaKit\3rdpart\CMakeLists.txt;E:\Repositories\ZLMediaKit\CMakeFiles\3.10.0-rc1\CMakeCCompiler.cmake;E:\Repositories\ZLMediaKit\CMakeFiles\3.10.0-rc1\CMakeCXXCompiler.cmake;E:\Repositories\ZLMediaKit\CMakeFiles\3.10.0-rc1\CMakeRCCompiler.cmake;E:\Repositories\ZLMediaKit\CMakeFiles\3.10.0-rc1\CMakeSystem.cmake;E:\Repositories\ZLMediaKit\CMakeLists.txt;E:\Repositories\ZLMediaKit\ZLMVersion.h.ini;E:\Repositories\ZLMediaKit\api\CMakeLists.txt;E:\Repositories\ZLMediaKit\api\tests\CMakeLists.txt;E:\Repositories\ZLMediaKit\cmake\FindFAAC.cmake;E:\Repositories\ZLMediaKit\cmake\FindJEMALLOC.cmake;E:\Repositories\ZLMediaKit\cmake\FindMYSQL.cmake;E:\Repositories\ZLMediaKit\cmake\FindPCAP.cmake;E:\Repositories\ZLMediaKit\cmake\FindX264.cmake;E:\Repositories\ZLMediaKit\ext-codec\CMakeLists.txt;E:\Repositories\ZLMediaKit\server\CMakeLists.txt;E:\Repositories\ZLMediaKit\src\CMakeLists.txt;E:\Repositories\ZLMediaKit\srt\CMakeLists.txt;E:\Repositories\ZLMediaKit\tests\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">E:\Repositories\ZLMediaKit\CMakeFiles\generate.stamp;E:\Repositories\ZLMediaKit\3rdpart\CMakeFiles\generate.stamp;E:\Repositories\ZLMediaKit\src\CMakeFiles\generate.stamp;E:\Repositories\ZLMediaKit\ext-codec\CMakeFiles\generate.stamp;E:\Repositories\ZLMediaKit\srt\CMakeFiles\generate.stamp;E:\Repositories\ZLMediaKit\api\CMakeFiles\generate.stamp;E:\Repositories\ZLMediaKit\api\tests\CMakeFiles\generate.stamp;E:\Repositories\ZLMediaKit\server\CMakeFiles\generate.stamp;E:\Repositories\ZLMediaKit\tests\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -HE:/Repositories/ZLMediaKit -BE:/Repositories/ZLMediaKit --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file E:/Repositories/ZLMediaKit/ZLMediaKit.sln
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">E:/Repositories/ZLMediaKit/CMakeFiles/e62ea270307b75b147db812891101e0c/generate.stamp.rule;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CMakeCInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CMakeCXXInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CMakeGenericSystem.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CMakeLanguageInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CMakePushCheckState.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CMakeRCInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CheckCSourceCompiles.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CheckCXXCompilerFlag.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CheckCXXSourceCompiles.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CheckCXXSymbolExists.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CheckStructHasMember.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CheckSymbolExists.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\FindGit.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\FindOpenSSL.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\GenerateExportHeader.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\Platform\Windows-MSVC.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\Platform\Windows.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\Platform\WindowsPaths.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\SelectLibraryConfigurations.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\exportheader.cmake.in;E:\Repositories\ZLMediaKit\3rdpart\CMakeLists.txt;E:\Repositories\ZLMediaKit\CMakeFiles\3.10.0-rc1\CMakeCCompiler.cmake;E:\Repositories\ZLMediaKit\CMakeFiles\3.10.0-rc1\CMakeCXXCompiler.cmake;E:\Repositories\ZLMediaKit\CMakeFiles\3.10.0-rc1\CMakeRCCompiler.cmake;E:\Repositories\ZLMediaKit\CMakeFiles\3.10.0-rc1\CMakeSystem.cmake;E:\Repositories\ZLMediaKit\CMakeLists.txt;E:\Repositories\ZLMediaKit\ZLMVersion.h.ini;E:\Repositories\ZLMediaKit\api\CMakeLists.txt;E:\Repositories\ZLMediaKit\api\tests\CMakeLists.txt;E:\Repositories\ZLMediaKit\cmake\FindFAAC.cmake;E:\Repositories\ZLMediaKit\cmake\FindJEMALLOC.cmake;E:\Repositories\ZLMediaKit\cmake\FindMYSQL.cmake;E:\Repositories\ZLMediaKit\cmake\FindPCAP.cmake;E:\Repositories\ZLMediaKit\cmake\FindX264.cmake;E:\Repositories\ZLMediaKit\ext-codec\CMakeLists.txt;E:\Repositories\ZLMediaKit\server\CMakeLists.txt;E:\Repositories\ZLMediaKit\src\CMakeLists.txt;E:\Repositories\ZLMediaKit\srt\CMakeLists.txt;E:\Repositories\ZLMediaKit\tests\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">E:\Repositories\ZLMediaKit\CMakeFiles\generate.stamp;E:\Repositories\ZLMediaKit\3rdpart\CMakeFiles\generate.stamp;E:\Repositories\ZLMediaKit\src\CMakeFiles\generate.stamp;E:\Repositories\ZLMediaKit\ext-codec\CMakeFiles\generate.stamp;E:\Repositories\ZLMediaKit\srt\CMakeFiles\generate.stamp;E:\Repositories\ZLMediaKit\api\CMakeFiles\generate.stamp;E:\Repositories\ZLMediaKit\api\tests\CMakeFiles\generate.stamp;E:\Repositories\ZLMediaKit\server\CMakeFiles\generate.stamp;E:\Repositories\ZLMediaKit\tests\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -HE:/Repositories/ZLMediaKit -BE:/Repositories/ZLMediaKit --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file E:/Repositories/ZLMediaKit/ZLMediaKit.sln
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">E:/Repositories/ZLMediaKit/CMakeFiles/e62ea270307b75b147db812891101e0c/generate.stamp.rule;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CMakeCInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CMakeCXXInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CMakeGenericSystem.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CMakeLanguageInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CMakePushCheckState.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CMakeRCInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CheckCSourceCompiles.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CheckCXXCompilerFlag.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CheckCXXSourceCompiles.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CheckCXXSymbolExists.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CheckStructHasMember.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\CheckSymbolExists.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\FindGit.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\FindOpenSSL.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\GenerateExportHeader.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\Platform\Windows-MSVC.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\Platform\Windows.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\Platform\WindowsPaths.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\SelectLibraryConfigurations.cmake;C:\Program Files (x86)\CMake\share\cmake-3.10\Modules\exportheader.cmake.in;E:\Repositories\ZLMediaKit\3rdpart\CMakeLists.txt;E:\Repositories\ZLMediaKit\CMakeFiles\3.10.0-rc1\CMakeCCompiler.cmake;E:\Repositories\ZLMediaKit\CMakeFiles\3.10.0-rc1\CMakeCXXCompiler.cmake;E:\Repositories\ZLMediaKit\CMakeFiles\3.10.0-rc1\CMakeRCCompiler.cmake;E:\Repositories\ZLMediaKit\CMakeFiles\3.10.0-rc1\CMakeSystem.cmake;E:\Repositories\ZLMediaKit\CMakeLists.txt;E:\Repositories\ZLMediaKit\ZLMVersion.h.ini;E:\Repositories\ZLMediaKit\api\CMakeLists.txt;E:\Repositories\ZLMediaKit\api\tests\CMakeLists.txt;E:\Repositories\ZLMediaKit\cmake\FindFAAC.cmake;E:\Repositories\ZLMediaKit\cmake\FindJEMALLOC.cmake;E:\Repositories\ZLMediaKit\cmake\FindMYSQL.cmake;E:\Repositories\ZLMediaKit\cmake\FindPCAP.cmake;E:\Repositories\ZLMediaKit\cmake\FindX264.cmake;E:\Repositories\ZLMediaKit\ext-codec\CMakeLists.txt;E:\Repositories\ZLMediaKit\server\CMakeLists.txt;E:\Repositories\ZLMediaKit\src\CMakeLists.txt;E:\Repositories\ZLMediaKit\srt\CMakeLists.txt;E:\Repositories\ZLMediaKit\tests\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">E:\Repositories\ZLMediaKit\CMakeFiles\generate.stamp;E:\Repositories\ZLMediaKit\3rdpart\CMakeFiles\generate.stamp;E:\Repositories\ZLMediaKit\src\CMakeFiles\generate.stamp;E:\Repositories\ZLMediaKit\ext-codec\CMakeFiles\generate.stamp;E:\Repositories\ZLMediaKit\srt\CMakeFiles\generate.stamp;E:\Repositories\ZLMediaKit\api\CMakeFiles\generate.stamp;E:\Repositories\ZLMediaKit\api\tests\CMakeFiles\generate.stamp;E:\Repositories\ZLMediaKit\server\CMakeFiles\generate.stamp;E:\Repositories\ZLMediaKit\tests\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>